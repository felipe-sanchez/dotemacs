# Change compilers as needed
CC = clang
MPICC = mpicc

# Change paths if needed (should include GSL)
DIRS = -I/opt/local/include
LIBS =  -L/opt/local/lib -lgsl -lgslcblas

# Compilation modes, see below
PRODUCTION = $(CC) -g3 -O3 -msse2 -DNDEBUG  -DHAVE_INLINE  $(DIRS)
DEBUG = $(CC) -g3 -O0 -Wall -Werror -msse2 $(DIRS)
DEBUG_FAST = $(CC) -g3 -O3 -Wall -Werror -msse2 $(DIRS)
MPI_DEBUG_FAST = $(MPICC) -g3 -O3 -Wall -Werror -DHAVE_MPI -msse2 $(DIRS)

# TACC 
TACC=-w1 -std=c99 -L$(TACC_GSL_LIB) -lgsl -lgslcblas -I$(TACC_GSL_INC) -I$(TACC_GSL_I\
NC)/gsl 
MPI_DEBUG_FAST_TACC = $(MPI_DEBUG_FAST) $(TACC)

# Choose one of PRODUCTION (optimized, asserts off), PRODUCTION_OPENMP 
# (production + threads, requires gcc, won't work with clang)
# DEBUG_FAST (optimized, asserts on), DEBUG (not optimized, asserts on),
# MPI_DEBUG_FAST (with MPI)

MODE = $(MPI_DEBUG_FAST)
DATE = `date +'%y.%m.%d %H.%M.%S'`
dm: objects/par.o src/*.c utils/*.h utils/*.c
	python py/par_parse_structless.py src/main.c
	$(MODE) $(LIBS) objects/par.o -o dm src/main.c
	@tar -czf "../data/backups/src_backup_$(DATE).tar.gz" src py Makefile utils >/dev/null

objects/par.o: utils/par.c utils/par.h
	$(MODE) -c -o objects/par.o utils/par.c

clean:
	rm -f objects/* dm outcome_* diags*

tacc_upload: clean
	rsync -rv src utils "smeschia@lonestar.tacc.utexas.edu:~/mcdm"

tacc_download:
	rsync -azhv 'smeschia@lonestar.tacc.utexas.edu:$$WORK/mcdm/*' ~/Data/mcdm/tacc
