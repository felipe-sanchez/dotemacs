;; Object astroML/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "astroML/"
  :tables (list 
   (semanticdb-table "decorators.py"
    :major-mode 'python-mode
    :tags 
        '( ("os" include nil nil [1 10])
            ("cPickle" include nil nil [11 25])
            ("numpy" include nil nil [26 44])
            ("pickle_results" function
               (:documentation "Generator for decorator which allows pickling the results of a funcion

    Pickle is python's built-in object serialization.  This decorator, when
    used on a function, saves the results of the computation in the function
    to a pickle file.  If the function is called a second time with the
    same inputs, then the computation will not be repeated and the previous
    results will be used.

    This functionality is useful for computations which take a long time,
    but will need to be repeated (such as the first step of a data analysis).

    Parameters
    ----------
    filename : string (optional)
        pickle file to which results will be saved.
        If not specified, then the file is '<funcname>_output.pkl'
        where '<funcname>' is replaced by the name of the decorated function.
    verbose : boolean (optional)
        if True, then print a message to standard out specifying when the
        pickle file is written or read.

    Examples
    --------
    >>> @pickle_results('tmp.pkl', verbose=True)
    ... def f(x):
    ...     return x * x
    >>> f(4)
    @pickle_results: computing results and saving to 'tmp.pkl'
    16
    >>> f(4)
    @pickle_results: using precomputed results from 'tmp.pkl'
    16
    >>> f(6)
    @pickle_results: computing results and saving to 'tmp.pkl'
    36
    >>> import os; os.remove('tmp.pkl')
    "
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [66 74])
                    ("verbose" variable nil (reparse-symbol function_parameters) [81 88]))                  )
                nil [47 3633]))          
    :file "decorators.py"
    :pointmax 3633
    :fsize 3632
    :lastmodtime '(21167 22181 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!sm52286!anaconda!lib!python2.7!site-packages!astroML!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
